# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: make application.yml
      run:
        mkdir -p ./src/main/resources
        touch ./src/main/resources/application.yml
        echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
          

     - name: Build with Gradle
        run: ./gradlew build -x test --parallel

      - name: Build Docker Image For Spring
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/toktok:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/toktok:latest
    deploy:
      needs: build
      runs-on: ubuntu-latest
      steps:
      - name: EC2 Docker Run
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.LINUX_HOST }}
          script: |
            cd /
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker compose -f docker-compose.yml stop ekiya
            docker compose -f docker-compose.yml rm -f ekiya
            docker compose -f docker-compose.yml up ekiya --pull always -d

